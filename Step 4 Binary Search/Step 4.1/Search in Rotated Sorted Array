<!-- https://leetcode.com/problems/search-in-rotated-sorted-array/description/ -->

class Solution {
    
public:
// identify the firt half sorted array
//time = 0(log N)


    int search(vector<int>& nums, int target) {
       int n = nums.size();
       int left = 0;
       int right = n-1;
       while(left<=right){
        int mid = (left+right)/2;
            if(nums[mid] == target){
                return mid;
            }
            if(nums[left] <= nums[mid]){
                if(nums[left] <= target && target <= nums[mid]){
                    right = mid-1;
                }
                else{
                    left = mid+1;
                }
            }
            else{
                if(nums[mid] <= target && target <= nums[right]){
                    left = mid+1;
                }
                else{
                    right = mid-1;
                }
            }
        }
        return -1;
       
    }
};