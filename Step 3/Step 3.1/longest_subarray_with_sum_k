<!-- https://www.codingninjas.com/studio/problems/longest-subarray-with-sum-k_5713505?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf -->

#include <bits/stdc++.h> 
int getLongestSubarray(vector<int>& a, int k){
    // Write your code here
    map<long long, int> preSumMap;
    long long sum = 0;
    int maxLength = 0;
    for(int i = 0; i < a.size(); i++)
    {
        sum += a[i];
        if(sum == k)
        {
            maxLength = max(maxLength, i+1);
        }
        int rem = sum - k;
        if(preSumMap.find(rem) != preSumMap.end())
        {
            int len = i - preSumMap[rem];
            maxLength = max(maxLength, len);
        }
        if (preSumMap.find(sum) == preSumMap.end()) {
          preSumMap[sum] = i;
        }
    }
    return maxLength;
}